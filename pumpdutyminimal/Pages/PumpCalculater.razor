@page "/"
<!--<PageTitle>Counter One</PageTitle>-->
<!--<h1>Counter PumpCalculater</h1>-->

<div class="container text-left">
    <div class="row">
        <div class="col-sm-6">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Cells to be completed by salesman:</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <table class="table">

                                <tbody>
                                    <!--
                                    <tr>
                                        <td>fred1234567890</td>
                                        <td>fred1234567890</td>
                                        <td>fred1234567890</td>
                                        <td>fred</td>

                                    </tr>-->
                                    <tr>
                                        <!--scope="row" colspan="3"-->
                                        <th>Number of apartments</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.apartments" @onchange="@OnSelectApartments" style="width:200px">
                                                @foreach (var apartment in apartments)
                                                {
                                                    <option value=@apartment>@apartment</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Number of storeys</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.stories" @onchange="@OnSelectStories" style="width:200px">
                                                @foreach (var storey in stories)
                                                {
                                                    <option value=@storey>@storey</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>

                                    <tr>
                                        <th colspan="2" class="text-center">Delivery points</th>
                                    </tr>
                                    <tr>
                                        <th>Sink</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.sinks" @onchange="@OnSelectSinks" style="width:200px">
                                                @foreach (var sink in sinks)
                                                {
                                                    <option value=@sink>@sink</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Dishwasher</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.dishwashers" @onchange="@OnSelectDishwashers" style="width:200px">
                                                @foreach (var dishwasher in dishwashers)
                                                {
                                                    <option value=@dishwasher>@dishwasher</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Washing Machines</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.washingmachines" @onchange="@OnSelectWashingmachines" style="width:200px">
                                                @foreach (var washingmachine in washingmachines)
                                                {
                                                    <option value=@washingmachine>@washingmachine</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Shower</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.showers" @onchange="@OnSelectShowers" style="width:200px">
                                                @foreach (var shower in showers)
                                                {
                                                    <option value=@shower>@shower</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Bathtub</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.bathtubs" @onchange="@OnSelectBathtubs" style="width:200px">
                                                @foreach (var bathtub in bathtubs)
                                                {
                                                    <option value=@bathtub>@bathtub</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Washbasin</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.washbasins" @onchange="@OnSelectWashbasins" style="width:200px">
                                                @foreach (var washbasin in washbasins)
                                                {
                                                    <option value=@washbasin>@washbasin</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Bidet</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.bidets" @onchange="@OnSelectBidets" style="width:200px">
                                                @foreach (var bidet in bidets)
                                                {
                                                    <option value=@bidet>@bidet</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Toilet system</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.toilet" @onchange="@OnSelectToilet" style="width:200px">
                                                @foreach (var toilet in toilets)
                                                {
                                                    <option value=@toilet>@toilet</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th colspan="2" class="text-center">Friction Loss</th>
                                    </tr>
                                    <tr>
                                        <th>Pipe Type</th>
                                        <td>
                                            <select class="form-control" value="@pumpSelections.pipe" @onchange="@OnSelectPipe" style="width:200px">
                                                @foreach (var pipe in pipes)
                                                {
                                                    <option value=@pipe>@pipe</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Pipe NB (mm)</th>
                                        <td>
                                            <div class="input-group mb-3" style="width:200px">
                                                <!--value="@pumpSelections.pipewidth"-->
                                                <input type="number" step=1 class="form-control" value=40 @onchange="@OnEditPipeWidth">

                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Pipe length (m)</th>
                                        <td>
                                            <div class="input-group mb-3" style="width:200px">
                                                <!--value="@pumpSelections.pipelength"-->
                                                <input type="number" step=1 class="form-control" value=70 @onchange="@OnEditPipeLength">

                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-sm-6 text-left">
            <div class="d-none d-sm-block">
                <div class="box"></div>

                <!-- <p role="status">Total: @currentCount</p> -->

            </div>
            <div>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Total Pump Duty:</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <table class="table">

                                    <tbody>

                                        <tr>
                                            <th>Total Required flow (m³/h)</th>
                                            <td>
                                                @pumpDuty.flow
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Total Dynamic Head (m)</th>
                                            <td>
                                                @pumpDuty.head
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Model</th>
                            <th scope="col">380V</th>
                            <th scope="col">220V</th>
                            <th scope="col">12V</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@pumpsChosen.model</td>
                            <td>@pumpsChosen.v380</td>
                            <td>@pumpsChosen.v220</td>
                            <td>@pumpsChosen.v12</td>
                        </tr>
                    </tbody>
                </table>



                <!--          <h5>toilet: @pumpSelections.toilet</h5>
           <h5>apartment: @pumpSelections.apartments</h5>
           <h5>stories: @pumpSelections.stories</h5>
           <h5>flow: @pumpDuty.flow</h5>
           <h5>head: @pumpDuty.head</h5>
           <h5>pipe width: @pumpSelections.pipewidth</h5>
           <h5>pipe length: @pumpSelections.pipelength</h5>
    -->

            </div>


        </div>

    </div>
</div>



<!-- <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
    -->

@code {
    protected override void OnInitialized()
    {
        calculateDuty();

        base.OnInitialized();
    }



    List<int> apartments = new List<int>() { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
    List<int> stories = new List<int>() { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
    List<int> sinks = new List<int>() { 0, 1, 2, 3, 4 };
    List<int> dishwashers = new List<int>() { 0, 1, 2, 3 };
    List<int> washingmachines = new List<int>() { 0, 1, 2, 3, 4 };
    List<int> showers = new List<int>() { 0, 1, 2, 3, 4 };
    List<int> bathtubs = new List<int>() { 0, 1, 2, 3, 4 };
    List<int> washbasins = new List<int>() { 0, 1, 2, 3, 4, 5 };
    List<int> bidets = new List<int>() { 0, 1, 2 };


    // enum Toilets { FC1, FM1, FC2, FM2 };

    List<string> toilets = new List<string>() { "1 x Flush tank / Cistern", "1 x Flush Master", "2 x Flush tank / Cistern", "2 x Flush Masters" };
    List<string> pipes = new List<string>() { "Steel Pipe ( New )", "Steel Pipe ( old )", "UPVC Pipe", "Asbestos cement" };
    string selectedString = "China";
    string selectedValue = "10";
    int newValue;

    private int currentCount = 0;

    struct PumpDuty
    {
        public float flow;
        public float head;
    }

    PumpDuty pumpDuty = new PumpDuty();


    struct PumpSelections
    {
        public int apartments;
        public int stories;
        public int sinks;
        public int dishwashers;
        public int washingmachines;
        public int showers;
        public int bathtubs;
        public int washbasins;
        public int bidets;
        public string toilet;
        public string pipe;
        public float pipewidth;
        public float pipelength;


        public PumpSelections(int ten, int two, int one, int zero, string toiletSystem, string pipeSystem, float pipeW, float pipeL)
        {
            apartments = ten;
            stories = two;
            sinks = two;
            dishwashers = one;
            washingmachines = one;
            showers = one;
            bathtubs = one;
            washbasins = two;
            bidets = zero;
            toilet = toiletSystem;
            pipe = pipeSystem;
            pipelength = pipeL;
            pipewidth = pipeW;

        }
    }

    struct PumpsChosen
    {
        public string model;
        public string v380;
        public string v220;
        public string v12;
    }

    PumpsChosen pumpsChosen = new PumpsChosen();

    float[,] boosterPerformance = new float[,]
        { { 0.6F, 12.5F}, { 0.8F, 12F }, { 1.0F, 11.5F }, { 1.2F, 11.0F },
        { 0.6F, 18.0F}, { 0.8F, 17.5F }, { 1.0F, 17.0F }, { 1.2F, 16.5F } };

    string[,] boosterProducts = new string[,]
            {{"VMS1-20", "VMS1-205","n/a" },
            {"VMS1-30", "VMS1-305" ,"n/a"}};



    PumpSelections pumpSelections = new PumpSelections(10, 2, 1, 0, "2 x Flush tank / Cistern", "Steel Pipe ( old )", 40.0F, 70.0F);
    //pumpSelections.stories = 10;


    public void calculateDuty()
    {
        PumpsChosen choisePumps(float[,] perf, string[,] prod, string model)
        {
            PumpsChosen returnStrut = new PumpsChosen();
            returnStrut.model = "VMS1";
            returnStrut.v380 = prod[1,0];
            returnStrut.v220 = prod[1,1];
            returnStrut.v12 = prod[1,2];

            return returnStrut;

        }

        pumpsChosen = choisePumps(boosterPerformance, boosterProducts, "VMS1");

        float RDB14 = 0.0F;
        float RDC13 = 0.0F;
        float B14;
        float B15;
        float B23 = 0.0F;
        float B30;
        float B31 = 126.96F;

        float FB10 = 0.0F;
        float FB9;
        float RDC18 = 0.0F;


        switch (pumpSelections.toilet)
        {
            case "1 x Flush tank / Cistern":
                RDB14 = 6.0F;
                RDC13 = 1.0F;
                break;
            case "1 x Flush Master":
                RDB14 = 90.0F;
                RDC13 = 2.0F;
                break;
            case "2 x Flush tank / Cistern":
                RDB14 = 12.0F;
                RDC13 = 2.0F;
                break;
            case "2 x Flush Master":
                RDB14 = 180.0F;
                RDC13 = 1.0F;
                break;
            default:
                // RDB13 = 2.0F;
                break;
        }

        B14 = (float)pumpSelections.apartments;
        B15 = (float)(pumpSelections.sinks + pumpSelections.dishwashers + pumpSelections.washingmachines + pumpSelections.showers + pumpSelections.bathtubs + pumpSelections.washbasins + pumpSelections.bidets) + RDC13;


        /*   switch (pumpSelections.toilet)
           {
               case "1 x Flush tank / Cistern":
                   pumpDuty.head = (float)pumpSelections.stories * 10.0F;
                   break;
               default:
                   pumpDuty.head = (float)pumpSelections.stories * 2.0F;
                   break;
           } */
        switch (pumpSelections.toilet)
        {
            case "1 x Flush tank / Cistern":

                B23 = 1.0F / (float)(Math.Sqrt(0.857F * B14 * B15));
                break;
            case "1 x Flush Master":
                B23 = 1.0F / (float)(Math.Sqrt(0.857F * B14 * B15));
                break;
            case "2 x Flush tank / Cistern":
                B23 = 1.03F / (float)(Math.Sqrt(0.545F * B14 * B15));
                break;
            case "2 x Flush Master":
                B23 = 0.8F / (float)(Math.Sqrt(0.727F * B14 * B15));
                break;
            default:
                // RDB13 = 2.0F;
                break;
        }
        B30 = ((float)(pumpSelections.sinks * 9 + pumpSelections.dishwashers * 10 + pumpSelections.washingmachines * 12 + pumpSelections.showers * 12 + pumpSelections.bathtubs * 15 + pumpSelections.washbasins * 6 + pumpSelections.bidets * 6) + RDB14) * (float)pumpSelections.apartments;
        B31 = B23 * B30;
        pumpDuty.flow = (B31 * 60.0F) / 1000.0F;

        switch (pumpSelections.stories)
        {
            case 1:
                FB10 = 25.0F;
                break;
            case 2:
                FB10 = 31.0F;
                break;
            case 3:
                FB10 = 37.0F;
                break;
            case 4:
                FB10 = 43.0F;
                break;
            case 5:
                FB10 = 49.0F;
                break;
            case 6:
                FB10 = 55.0F;
                break;
            case 7:
                FB10 = 61.0F;
                break;
            case 8:
                FB10 = 67.0F;
                break;
            case 9:
                FB10 = 73.0F;
                break;
            case 10:
                FB10 = 79.0F;
                break;
            default:
                //  FB10 = 25.0F;
                break;
        }

        switch (pumpSelections.pipe)
        {
            case "Steel Pipe ( New )":

                RDC18 = 130.0F;
                break;
            case "Steel Pipe ( old )":
                RDC18 = 110.0F;
                break;
            case "UPVC Pipe":
                RDC18 = 140.0F;
                break;
            case "Asbestos cement":
                RDC18 = 140.0F;
                break;
            default:
                // RDC18 = 110.0F;
                break;
        }
        // RDC18 = 110.0F;
        FB9 = pumpSelections.pipelength * (float)Math.Pow(((pumpDuty.flow / 3.6F) / (3.5888F * (float)Math.Pow(10, -6) * RDC18 * ((float)Math.Pow(pumpSelections.pipewidth, 2.63)))), 1.85);
        pumpDuty.head = FB10 + FB9;


    }

    /*   void OnStartup(ChangeEventArgs e)
       {
           calculateDuty();
       }*/

    void OnSelectApartments(ChangeEventArgs e)
    {

        pumpSelections.apartments = int.Parse(e.Value.ToString());
        calculateDuty();

    }

    void OnSelectStories(ChangeEventArgs e)
    {
        pumpSelections.stories = int.Parse(e.Value.ToString());
        calculateDuty();
    }

    void OnSelectSinks(ChangeEventArgs e)
    {
        pumpSelections.sinks = int.Parse(e.Value.ToString());
        calculateDuty();
    }
    void OnSelectDishwashers(ChangeEventArgs e)
    {
        pumpSelections.dishwashers = int.Parse(e.Value.ToString());
        calculateDuty();
    }
    void OnSelectWashingmachines(ChangeEventArgs e)
    {
        pumpSelections.dishwashers = int.Parse(e.Value.ToString());
        calculateDuty();
    }
    void OnSelectShowers(ChangeEventArgs e)
    {
        pumpSelections.showers = int.Parse(e.Value.ToString());
        calculateDuty();
    }
    void OnSelectBathtubs(ChangeEventArgs e)
    {
        pumpSelections.bathtubs = int.Parse(e.Value.ToString());
        calculateDuty();
    }
    void OnSelectWashbasins(ChangeEventArgs e)
    {
        pumpSelections.washbasins = int.Parse(e.Value.ToString());
        calculateDuty();
    }
    void OnSelectBidets(ChangeEventArgs e)
    {
        pumpSelections.bidets = int.Parse(e.Value.ToString());
        calculateDuty();
    }

    void OnSelectToilet(ChangeEventArgs e)
    {
        pumpSelections.toilet = e.Value.ToString();
        calculateDuty();
    }
    void OnSelectPipe(ChangeEventArgs e)
    {
        pumpSelections.pipe = e.Value.ToString();
        calculateDuty();
    }
    void OnEditPipeWidth(ChangeEventArgs e)
    {
        pumpSelections.pipewidth = float.Parse(e.Value.ToString());
        calculateDuty();
    }
    void OnEditPipeLength(ChangeEventArgs e)
    {
        pumpSelections.pipelength = float.Parse(e.Value.ToString());
        calculateDuty();
    }



    /*   void OnSelect(ChangeEventArgs e)
       {
           selectedString = e.Value.ToString();

           Console.WriteLine("The selected country is : " + selectedString);
       }
       //  private void IncrementCount()
       //  {
       //      currentCount++;
       //  }
    */
    }

